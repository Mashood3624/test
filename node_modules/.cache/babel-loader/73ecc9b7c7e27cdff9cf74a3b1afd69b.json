{"ast":null,"code":"// https://redux-observable.js.org/docs/basics/SettingUpTheMiddleware.html\nimport { AsyncStorage } from 'react';\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { combineEpics, createEpicMiddleware } from 'redux-observable';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web and AsyncStorage for react-native\n// reducers\n\nimport { AuthReducer, AllActionReducer } from './reducer/index'; // epics\n\nimport { AuthEpic, AllActionEpic } from './epic/index';\nimport { AuthAction } from './action'; // Application Epics / Effects\n\nvar persistConfig = {\n  key: 'root',\n  storage: storage\n};\nvar rootEpic = combineEpics(AuthEpic.login, AuthEpic.Signup, AuthEpic.SetUserData, // AuthEpic.getUserDetail,\n// AuthEpic.changePass,\n// AuthEpic.themeTemplate,\nAllActionEpic.insertCompany, AllActionEpic.getCompany, AllActionEpic.updateCompany, AllActionEpic.getAllCompany, AllActionEpic.insertDriver, AllActionEpic.SignupDriver, AllActionEpic.getDriverRequsetsList, AllActionEpic.updateDriver, AllActionEpic.insertAdminDriver, AllActionEpic.getDriversList, AllActionEpic.insertProducts, AllActionEpic.getProductsList, AllActionEpic.insertTermsConditions, AllActionEpic.GetTermsAndCondition, AllActionEpic.insertCategories // AllActionEpic.SupplierLookup,\n// AllActionEpic.StoreTypeLookup,\n// AllActionEpic.getItemsLookup,\n); // Application Reducers\n\nvar rootReducer = combineReducers({\n  AuthReducer: AuthReducer,\n  AllActionReducer: AllActionReducer\n});\nvar persistedReducer = persistReducer(persistConfig, rootReducer);\nvar epicMiddleware = createEpicMiddleware(rootEpic);\nvar createStoreWithMiddleware = applyMiddleware(epicMiddleware)(createStore); // epicMiddleware.run(rootEpic);\n\nexport var store = createStoreWithMiddleware(persistedReducer);\nexport var persistor = persistStore(store, {\n  storage: AsyncStorage\n}); // Export Actions\n\nexport * from './action/index';","map":{"version":3,"sources":["D:/Github/Admin_Panel/src/store/index.js"],"names":["AsyncStorage","combineReducers","createStore","applyMiddleware","combineEpics","createEpicMiddleware","persistStore","persistReducer","storage","AuthReducer","AllActionReducer","AuthEpic","AllActionEpic","AuthAction","persistConfig","key","rootEpic","login","Signup","SetUserData","insertCompany","getCompany","updateCompany","getAllCompany","insertDriver","SignupDriver","getDriverRequsetsList","updateDriver","insertAdminDriver","getDriversList","insertProducts","getProductsList","insertTermsConditions","GetTermsAndCondition","insertCategories","rootReducer","persistedReducer","epicMiddleware","createStoreWithMiddleware","store","persistor"],"mappings":"AAAA;AACA,SAASA,YAAT,QAA6B,OAA7B;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,YAAT,EAAuBC,oBAAvB,QAAmD,kBAAnD;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAgD;AAEhD;;AAEA,SAAQC,WAAR,EAAoBC,gBAApB,QAA6C,iBAA7C,C,CAkBA;;AAEA,SAASC,QAAT,EAAkBC,aAAlB,QAAsC,cAAtC;AACA,SAASC,UAAT,QAA2B,UAA3B,C,CAMA;;AACA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBP,EAAAA,OAAO,EAAPA;AAFkB,CAAtB;AAKA,IAAMQ,QAAQ,GAAGZ,YAAY,CACzBO,QAAQ,CAACM,KADgB,EAEzBN,QAAQ,CAACO,MAFgB,EAGzBP,QAAQ,CAACQ,WAHgB,EAKzB;AACA;AACA;AAGAP,aAAa,CAACQ,aAVW,EAWzBR,aAAa,CAACS,UAXW,EAazBT,aAAa,CAACU,aAbW,EAczBV,aAAa,CAACW,aAdW,EAezBX,aAAa,CAACY,YAfW,EAgBzBZ,aAAa,CAACa,YAhBW,EAiBzBb,aAAa,CAACc,qBAjBW,EAkBzBd,aAAa,CAACe,YAlBW,EAmBzBf,aAAa,CAACgB,iBAnBW,EAoBzBhB,aAAa,CAACiB,cApBW,EAqBzBjB,aAAa,CAACkB,cArBW,EAsBzBlB,aAAa,CAACmB,eAtBW,EAuBzBnB,aAAa,CAACoB,qBAvBW,EAwBzBpB,aAAa,CAACqB,oBAxBW,EAyBzBrB,aAAa,CAACsB,gBAzBW,CA0BzB;AACA;AACA;AA5ByB,CAA7B,C,CA+BA;;AACA,IAAMC,WAAW,GAAGlC,eAAe,CAAC;AAChCQ,EAAAA,WAAW,EAAXA,WADgC;AAGhCC,EAAAA,gBAAgB,EAAhBA;AAHgC,CAAD,CAAnC;AAKA,IAAM0B,gBAAgB,GAAG7B,cAAc,CAACO,aAAD,EAAgBqB,WAAhB,CAAvC;AACA,IAAME,cAAc,GAAGhC,oBAAoB,CAACW,QAAD,CAA3C;AACA,IAAMsB,yBAAyB,GAAGnC,eAAe,CAACkC,cAAD,CAAf,CAAgCnC,WAAhC,CAAlC,C,CACA;;AAEA,OAAO,IAAIqC,KAAK,GAAGD,yBAAyB,CAACF,gBAAD,CAArC;AACP,OAAO,IAAII,SAAS,GAAGlC,YAAY,CAACiC,KAAD,EAAQ;AAAE/B,EAAAA,OAAO,EAAER;AAAX,CAAR,CAA5B,C,CACP;;AACA,cAAc,gBAAd","sourcesContent":["// https://redux-observable.js.org/docs/basics/SettingUpTheMiddleware.html\r\nimport { AsyncStorage } from 'react';\r\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport { combineEpics, createEpicMiddleware } from 'redux-observable';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\r\n\r\n// reducers\r\n\r\nimport {AuthReducer,AllActionReducer, } from './reducer/index';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// epics\r\n\r\nimport { AuthEpic,AllActionEpic} from './epic/index';\r\nimport { AuthAction } from './action';\r\n\r\n\r\n\r\n\r\n\r\n// Application Epics / Effects\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\n\r\nconst rootEpic = combineEpics(\r\n    AuthEpic.login,\r\n    AuthEpic.Signup,\r\n    AuthEpic.SetUserData,\r\n    \r\n    // AuthEpic.getUserDetail,\r\n    // AuthEpic.changePass,\r\n    // AuthEpic.themeTemplate,\r\n    \r\n\r\n    AllActionEpic.insertCompany,\r\n    AllActionEpic.getCompany,\r\n\r\n    AllActionEpic.updateCompany,\r\n    AllActionEpic.getAllCompany,\r\n    AllActionEpic.insertDriver,\r\n    AllActionEpic.SignupDriver,\r\n    AllActionEpic.getDriverRequsetsList,\r\n    AllActionEpic.updateDriver,\r\n    AllActionEpic.insertAdminDriver,\r\n    AllActionEpic.getDriversList,\r\n    AllActionEpic.insertProducts,\r\n    AllActionEpic.getProductsList,\r\n    AllActionEpic.insertTermsConditions,\r\n    AllActionEpic.GetTermsAndCondition,\r\n    AllActionEpic.insertCategories,\r\n    // AllActionEpic.SupplierLookup,\r\n    // AllActionEpic.StoreTypeLookup,\r\n    // AllActionEpic.getItemsLookup,\r\n);\r\n\r\n// Application Reducers\r\nconst rootReducer = combineReducers({\r\n    AuthReducer,\r\n    \r\n    AllActionReducer,\r\n});\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\nconst epicMiddleware = createEpicMiddleware(rootEpic);\r\nconst createStoreWithMiddleware = applyMiddleware(epicMiddleware)(createStore);\r\n// epicMiddleware.run(rootEpic);\r\n\r\nexport let store = createStoreWithMiddleware(persistedReducer);\r\nexport let persistor = persistStore(store, { storage: AsyncStorage })\r\n// Export Actions\r\nexport * from './action/index';"]},"metadata":{},"sourceType":"module"}