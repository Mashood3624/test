{"ast":null,"code":"import _objectSpread from \"D:\\\\Github\\\\Admin_Panel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\Github\\\\Admin_Panel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Github\\\\Admin_Panel\\\\src\\\\container\\\\AddCategories\\\\AddCategories.js\";\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { AllAction } from '../../store/action/index';\nimport DeleteBox from '../../components/DeleteBox/DeleteBox';\nimport ErrorBox from '../../components/ErrorBox/ErrorBox';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport appFirebase from '../../utilities/Firebase';\n\nvar Categories = function Categories(props) {\n  var Categories = {\n    Code: '',\n    ID: '',\n    CategoriesName: ''\n  };\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      actionCol = _useState2[0],\n      setActionCol = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      deleteBox = _useState4[0],\n      setDeleteBox = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loadingDelete = _useState6[0],\n      setloadingDelete = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorBox = _useState8[0],\n      setErrorBox = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      editData = _useState10[0],\n      setEditData = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      msgString = _useState12[0],\n      setMsgString = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      selectedList = _useState14[0],\n      setSelectedList = _useState14[1];\n\n  var _useState15 = useState({\n    rows: [],\n    columns: [{\n      title: 'Categories Name',\n      field: 'CategoriesName'\n    }]\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      List = _useState16[0],\n      setList = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      loading = _useState18[0],\n      setLoading = _useState18[1];\n\n  var _useState19 = useState({\n    Code: '',\n    ID: '',\n    CategoriesName: '',\n    InActive: false\n  }),\n      _useState20 = _slicedToArray(_useState19, 2),\n      property = _useState20[0],\n      updatePropert = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      visibleDialog = _useState22[0],\n      setVisibleDialog = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      loadingOnSave = _useState24[0],\n      setloadingOnSave = _useState24[1];\n\n  var onClickDelete = function onClickDelete(rowData) {\n    setDeleteBox(true);\n    setSelectedList(rowData);\n  };\n\n  var DeleteCategory = function DeleteCategory(arr, payload) {\n    var newArr = arr;\n    var index = -1;\n\n    for (var i = 0, len = newArr.length; i < len; i++) {\n      if (newArr[i].CategoriesName === payload.CategoriesName) {\n        index = i;\n        break;\n      }\n    }\n\n    console.log({\n      index: index\n    });\n    newArr.splice(index, 1);\n    appFirebase.firestore().collection(\"companies\").doc(props.LoginRes.Res).update({\n      category: newArr\n    }).then(function (doc) {\n      setloadingDelete(false);\n      setDeleteBox(false);\n      getList();\n    }).catch(function (err) {\n      console.log({\n        err: err\n      });\n    });\n  };\n\n  var Delete = function Delete() {\n    console.log({\n      selectedList: selectedList\n    });\n    setloadingDelete(true);\n    appFirebase.firestore().collection(\"companies\").doc(props.LoginRes.Res).get().then(function (doc) {\n      console.log({\n        data: doc.data().category\n      });\n      DeleteCategory(doc.data().category, selectedList);\n    }).catch(function (err) {\n      console.log({\n        err: err\n      });\n    });\n  };\n\n  var hide = function hide() {\n    setSelectedList(null);\n    setDeleteBox(false);\n  };\n\n  var getList = function getList() {\n    setLoading(true);\n    appFirebase.firestore().collection(\"companies\").doc(props.LoginRes.Res).get().then(function (doc) {\n      console.log({\n        data: doc.data().category\n      });\n      setLoading(false);\n      setList(_objectSpread(_objectSpread({}, List), {}, {\n        rows: doc.data().category\n      }));\n    }).catch(function (err) {\n      console.log({\n        err: err\n      });\n    });\n  };\n\n  var insertCategory = function insertCategory(arr, payload) {\n    var newArr = arr;\n    newArr.push(payload);\n    appFirebase.firestore().collection(\"companies\").doc(props.LoginRes.Res).update({\n      category: newArr\n    }).then(function (doc) {\n      setVisibleDialog(false);\n      getList();\n    }).catch(function (err) {\n      console.log({\n        err: err\n      });\n    });\n  };\n\n  var insertCategoryFunc = function insertCategoryFunc(payload) {\n    appFirebase.firestore().collection(\"companies\").doc(props.LoginRes.Res).get().then(function (doc) {\n      console.log({\n        data: doc.data().category\n      });\n      insertCategory(doc.data().category, payload);\n    }).catch(function (err) {\n      console.log({\n        err: err\n      });\n    });\n  };\n\n  var handleSave = function handleSave() {\n    if (checkFields()) {\n      setloadingOnSave(true);\n      var payload = {\n        CategoriesName: property.CategoriesName\n      };\n      insertCategoryFunc(payload);\n\n      if (editData) {// console.log({ payload })\n        // props.insertCategories(payload)\n        // appFirebase.firestore().collection(`categories(${props.LoginRes.Res})`).add({\n        //     payload\n        // }).then(() => {\n        //     setVisibleDialog(false);\n        //     setLoading(true);\n        //     let arr = []\n        //     setLoading(true);\n        //     setloadingDelete(false)\n        //     setDeleteBox(false);\n        //     appFirebase.firestore().collection(`categories(${props.LoginRes.Res})`).get()\n        //         .then((querySnapshot) => {\n        //             querySnapshot.forEach(function (doc) {\n        //                 let data = {\n        //                     CategoriesName: doc.data().payload.CategoriesName,\n        //                     docId: doc.id,\n        //                     CpmapnyID: doc.data().payload.CpmapnyID\n        //                 }\n        //                 arr.push(data)\n        //                 // doc.data() is never undefined for query doc snapshots\n        //                 console.log(doc.id, \" => \", doc.data());\n        //             })\n        //             setList({ ...List, rows: arr })\n        //             console.log(\"arr\", arr)\n        //             setLoading(false);\n        //         })\n        // }).catch(() => {\n        // })\n      } else {// let payload = {\n          //     Header: Header,\n          //     FormName: 'Categoriess',\n          //     ID: selectedList.CategoriesID\n          // }\n          // props.updateAllLists(payload)\n        }\n    }\n  };\n\n  var checkFields = function checkFields() {\n    if (property.CategoriesName === '' || property.CategoriesName === null || property.CategoriesName === undefined) {\n      setMsgString('Please Input Categories Name');\n      setErrorBox(true);\n      return false;\n    }\n\n    return true;\n  }; // const latestProps = useRef(props);\n\n\n  useEffect(function () {\n    getList();\n  }, []);\n  useEffect(function () {\n    if (props.error) {\n      setDeleteBox(false);\n      setLoading(false);\n      setloadingDelete(false);\n      setloadingOnSave(false);\n      setVisibleDialog(false);\n      setMsgString(props.error);\n      setErrorBox(true);\n      props.AllListsNull();\n    }\n\n    if (props.ListInsertRes) {\n      var paylaod = {\n        FormName: 'Categoriess'\n      };\n      props.getAllLists(paylaod);\n      props.AllListsNull();\n      setVisibleDialog(false);\n      setLoading(true);\n    }\n\n    if (props.ListRes) {\n      setActionCol([]);\n      var activeColumn = {\n        title: \"InActive\",\n        field: \"InActive\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            className: \"table-checkbox\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 28\n            }\n          }, /*#__PURE__*/React.createElement(Checkbox, {\n            disabled: true,\n            checked: rowData.InActive === 1 ? true : false,\n            Categories: \"default\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 61\n            }\n          }));\n        }\n      };\n      props.ListRes.columns.splice(2, 0, activeColumn);\n      setLoading(false);\n      setList(props.ListRes);\n      props.AllListsNull();\n    }\n\n    if (props.ListUpdateRes) {\n      var _paylaod = {\n        FormName: 'Categoriess'\n      };\n      props.getAllLists(_paylaod);\n      setVisibleDialog(false);\n      setLoading(true); // setList(props.ListRes);\n\n      props.AllListsNull();\n    }\n\n    if (props.ListDelRes) {\n      setloadingDelete(false);\n      props.AllListsNull();\n      props.getAllLists({\n        FormName: 'Categoriess'\n      });\n      setLoading(true);\n      setSelectedList(null);\n      setDeleteBox(false);\n      setMsgString('');\n    }\n\n    ;\n  });\n  var growl;\n\n  var addNew = function addNew() {\n    updatePropert({\n      code: '',\n      ID: '',\n      InActive: '',\n      CategoriesName: ''\n    });\n    setloadingOnSave(false);\n    setVisibleDialog(true);\n    setEditData(true);\n  };\n\n  var handleClose = function handleClose() {\n    setVisibleDialog(false);\n  };\n\n  var hideError = function hideError() {\n    setErrorBox(false);\n    setMsgString('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-grid p-fluid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-col-12 p-lg-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ErrorBox, {\n    open: errorBox,\n    onClose: hideError,\n    msg: msgString,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: visibleDialog,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MuiDialogTitle, {\n    disableTypography: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 25\n    }\n  }, \"Add Categories\"), /*#__PURE__*/React.createElement(IconButton, {\n    style: {\n      position: 'absolute',\n      right: '5px',\n      top: '10px'\n    },\n    \"aria-label\": \"close\",\n    onClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    style: {\n      width: \"\".concat(Math.ceil(window.outerWidth / 4), \"px\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: '10px',\n      marginTop: '5px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    onChange: function onChange(e) {\n      return updatePropert(_objectSpread(_objectSpread({}, property), {}, {\n        CategoriesName: e.target.value\n      }));\n    },\n    value: property.CategoriesName,\n    fullWidth: true,\n    style: {\n      display: 'block',\n      marginBottom: '20px'\n    },\n    id: \"standard-basic\",\n    label: \"Category Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 29\n    }\n  })), loadingOnSave && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: 100,\n      left: 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ProgressSpinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(MuiDialogActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: loadingOnSave === true ? true : false,\n    autoFocus: true,\n    onClick: handleSave,\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 25\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n    disabled: loadingOnSave === true ? true : false,\n    autoFocus: true,\n    onClick: handleClose,\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 25\n    }\n  }, \"Cancel\"))), /*#__PURE__*/React.createElement(MaterialTable, {\n    style: {\n      padding: '10px'\n    },\n    title: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"table-title\",\n      style: {\n        fontWeight: \"bold\",\n        fontSize: \"20px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 29\n      }\n    }, \"Categories Details\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: function onClick() {\n        return addNew();\n      },\n      className: \"table-button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 29\n      }\n    }, \"Add\", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      style: {\n        marginLeft: '10px'\n      },\n      disabled: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 110\n      }\n    }))),\n    isLoading: loading,\n    columns: List.columns,\n    data: List.rows,\n    localization: {\n      body: {\n        emptyDataSourceMessage: 'No records to display',\n        filterRow: {\n          filterTooltip: 'Filter'\n        }\n      }\n    },\n    options: {\n      actionsColumnIndex: -1,\n      pageSize: 10,\n      pageSizeOptions: [5, 10, 20, 30],\n      search: true,\n      headerStyle: {\n        fontWeight: 'bold',\n        paddingLeft: '10px',\n        paddingRight: '0px',\n        paddingTop: '5px',\n        paddingBottom: '5px',\n        textAlign: 'left'\n      }\n    },\n    actions: [// {\n    //     icon: 'edit',\n    //     tooltip: 'edit',\n    //     onClick: (event, rowData) => {\n    //         onEdit(rowData);\n    //     },\n    //     // disabled:this.btnEditRights === true ? false : true\n    // },\n    {\n      icon: 'delete',\n      tooltip: 'Delete',\n      onClick: function onClick(event, rowData) {\n        onClickDelete(rowData);\n      } // disabled: this.btnDeleteRights === true ? false : true\n\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DeleteBox, {\n    open: deleteBox,\n    onDelete: Delete,\n    onCancel: hide,\n    loadingDelete: loadingDelete,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    LoginRes: state.AuthReducer.LoginRes // users: state.AuthReducer.user,\n    // userActions: state.AuthReducer.userActions,\n    // ListRes: state.AllActionReducer.ListRes,\n    // ListDelRes: state.AllActionReducer.ListDelRes,\n    // ListInsertRes: state.AllActionReducer.ListInsertRes,\n    // ListUpdateRes: state.AllActionReducer.ListUpdateRes,\n    // error: state.AllActionReducer.error,\n\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    insertCategories: function insertCategories(payload) {\n      return dispatch(AllAction.insertCategories(payload));\n    } // AllListsNull: () => dispatch(AllAction.AllListsNull()),\n    // updateAllLists: (payload) => dispatch(AllAction.updateAllLists(payload)),\n    // getAllLists: (payload) => dispatch(AllAction.getAllLists(payload)),\n    // deleteAllLists: (payload) => dispatch(AllAction.deleteAllLists(payload)),\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);","map":{"version":3,"sources":["D:/Github/Admin_Panel/src/container/AddCategories/AddCategories.js"],"names":["React","useState","useEffect","useRef","connect","MaterialTable","VisibilityOutlinedIcon","Dialog","DialogContent","MuiDialogActions","MuiDialogTitle","IconButton","CloseIcon","Typography","Button","TextField","Checkbox","FormControlLabel","AllAction","DeleteBox","ErrorBox","ProgressSpinner","appFirebase","Categories","props","Code","ID","CategoriesName","actionCol","setActionCol","deleteBox","setDeleteBox","loadingDelete","setloadingDelete","errorBox","setErrorBox","editData","setEditData","msgString","setMsgString","selectedList","setSelectedList","rows","columns","title","field","List","setList","loading","setLoading","InActive","property","updatePropert","visibleDialog","setVisibleDialog","loadingOnSave","setloadingOnSave","onClickDelete","rowData","DeleteCategory","arr","payload","newArr","index","i","len","length","console","log","splice","firestore","collection","doc","LoginRes","Res","update","category","then","getList","catch","err","Delete","get","data","hide","insertCategory","push","insertCategoryFunc","handleSave","checkFields","undefined","error","AllListsNull","ListInsertRes","paylaod","FormName","getAllLists","ListRes","activeColumn","render","ListUpdateRes","ListDelRes","growl","addNew","code","handleClose","hideError","position","right","top","width","Math","ceil","window","outerWidth","marginBottom","marginTop","e","target","value","display","left","padding","fontWeight","fontSize","marginLeft","body","emptyDataSourceMessage","filterRow","filterTooltip","actionsColumnIndex","pageSize","pageSizeOptions","search","headerStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","textAlign","icon","tooltip","onClick","event","mapStateToProps","state","AuthReducer","mapDispatchToProps","dispatch","insertCategories"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { AllAction } from '../../store/action/index';\r\nimport DeleteBox from '../../components/DeleteBox/DeleteBox';\r\nimport ErrorBox from '../../components/ErrorBox/ErrorBox';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport appFirebase from '../../utilities/Firebase';\r\nconst Categories = (props) => {\r\n    const Categories = {\r\n        Code: '',\r\n        ID: '',\r\n        CategoriesName: ''\r\n    }\r\n    const [actionCol, setActionCol] = useState([]);\r\n    const [deleteBox, setDeleteBox] = useState(false);\r\n    const [loadingDelete, setloadingDelete] = useState(false);\r\n\r\n\r\n    const [errorBox, setErrorBox] = useState(false);\r\n    const [editData, setEditData] = useState(false);\r\n    const [msgString, setMsgString] = useState('');\r\n    const [selectedList, setSelectedList] = useState(null);\r\n    const [List, setList] = useState({\r\n\r\n        rows: [],\r\n        columns: [  \r\n        { title: 'Categories Name', field: 'CategoriesName' },\r\n        ]\r\n\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const [property, updatePropert] = useState({\r\n        Code: '',\r\n        ID: '',\r\n        CategoriesName: '',\r\n        InActive: false\r\n    })\r\n    const [visibleDialog, setVisibleDialog] = useState(false);\r\n    const [loadingOnSave, setloadingOnSave] = useState(false);\r\n\r\n    const onClickDelete = (rowData) => {\r\n        setDeleteBox(true);\r\n        setSelectedList(rowData);\r\n    }\r\n\r\n\r\n     const DeleteCategory = (arr, payload) => {\r\n        let newArr = arr\r\n        \r\n\r\n        var index = -1;\r\n        for (var i = 0, len = newArr.length; i < len; i++) {\r\n            if (newArr[i].CategoriesName === payload.CategoriesName) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        console.log({ index })\r\n\r\n        newArr.splice(index,1)\r\n        appFirebase.firestore().collection(\"companies\").doc(props.LoginRes.Res).update({\r\n            category: newArr\r\n        }).\r\n            then((doc) => {\r\n                setloadingDelete(false);\r\n                setDeleteBox(false);\r\n                getList()\r\n                 \r\n            }).catch((err) => {\r\n                console.log({ err })\r\n            })\r\n\r\n    }\r\n    const Delete = () => {\r\n        console.log({selectedList})\r\n        setloadingDelete(true)\r\n        appFirebase.firestore().collection(\"companies\").doc(props.LoginRes.Res).get().\r\n        then((doc) => {\r\n            console.log({ data: doc.data().category })\r\n            DeleteCategory(  doc.data().category, selectedList )\r\n            \r\n           \r\n        }).catch((err) => {\r\n            console.log({ err })\r\n        })\r\n     \r\n         \r\n    }\r\n    const hide = () => {\r\n        setSelectedList(null);\r\n        setDeleteBox(false);\r\n    }\r\n    const getList=()=>{\r\n        \r\n        setLoading(true);\r\n\r\n        appFirebase.firestore().collection(\"companies\").doc(props.LoginRes.Res).get().\r\n        then((doc) => {\r\n            console.log({ data: doc.data().category })\r\n            setLoading(false);\r\n            \r\n            setList({ ...List, rows: doc.data().category })\r\n        }).catch((err) => {\r\n            console.log({ err })\r\n        })\r\n        \r\n\r\n    }\r\n\r\n    const insertCategory=(arr, payload)=>{\r\n\r\n       \r\n            let newArr = arr\r\n            newArr.push(payload)\r\n            appFirebase.firestore().collection(\"companies\").doc(props.LoginRes.Res).update({\r\n                category: newArr\r\n            }).\r\n                then((doc) => {\r\n                    setVisibleDialog(false);\r\n                    getList()\r\n                }).catch((err) => {\r\n                    console.log({ err })\r\n                })\r\n        \r\n        \r\n\r\n\r\n    }\r\n\r\n    const insertCategoryFunc = (payload) => {\r\n         \r\n\r\n      \r\n            appFirebase.firestore().collection(\"companies\").doc(props.LoginRes.Res).get().\r\n                then((doc) => {\r\n                    console.log({ data: doc.data().category })\r\n                    insertCategory(doc.data().category, payload)\r\n                }).catch((err) => {\r\n                    console.log({ err })\r\n                })\r\n\r\n       \r\n\r\n\r\n    }\r\n    const handleSave = () => {\r\n        if (checkFields()) {\r\n            setloadingOnSave(true)\r\n            let payload = {\r\n                CategoriesName: property.CategoriesName,\r\n               \r\n\r\n            }\r\n\r\n\r\n            insertCategoryFunc(payload)\r\n\r\n\r\n            \r\n\r\n            if (editData) {\r\n\r\n\r\n\r\n\r\n                // console.log({ payload })\r\n                // props.insertCategories(payload)\r\n                // appFirebase.firestore().collection(`categories(${props.LoginRes.Res})`).add({\r\n                //     payload\r\n                // }).then(() => {\r\n                //     setVisibleDialog(false);\r\n                //     setLoading(true);\r\n                   \r\n                //     let arr = []\r\n                //     setLoading(true);\r\n                //     setloadingDelete(false)\r\n                //     setDeleteBox(false);\r\n                //     appFirebase.firestore().collection(`categories(${props.LoginRes.Res})`).get()\r\n                //         .then((querySnapshot) => {\r\n            \r\n                //             querySnapshot.forEach(function (doc) {\r\n                //                 let data = {\r\n            \r\n                //                     CategoriesName: doc.data().payload.CategoriesName,\r\n                //                     docId: doc.id,\r\n                //                     CpmapnyID: doc.data().payload.CpmapnyID\r\n                //                 }\r\n                //                 arr.push(data)\r\n                //                 // doc.data() is never undefined for query doc snapshots\r\n                //                 console.log(doc.id, \" => \", doc.data());\r\n                //             })\r\n                //             setList({ ...List, rows: arr })\r\n                //             console.log(\"arr\", arr)\r\n                //             setLoading(false);\r\n                //         })\r\n\r\n\r\n \r\n                        \r\n                // }).catch(() => {\r\n\r\n                // })\r\n            }\r\n            else {\r\n                // let payload = {\r\n                //     Header: Header,\r\n                //     FormName: 'Categoriess',\r\n                //     ID: selectedList.CategoriesID\r\n\r\n                // }\r\n                // props.updateAllLists(payload)\r\n            }\r\n        }\r\n\r\n\r\n    };\r\n    const checkFields = () => {\r\n        if (property.CategoriesName === '' || property.CategoriesName === null || property.CategoriesName === undefined) {\r\n            setMsgString('Please Input Categories Name');\r\n            setErrorBox(true);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    // const latestProps = useRef(props);\r\n    useEffect(() => {\r\n        getList()\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (props.error) {\r\n            setDeleteBox(false);\r\n            setLoading(false);\r\n            setloadingDelete(false)\r\n            setloadingOnSave(false)\r\n            setVisibleDialog(false);\r\n            setMsgString(props.error);\r\n            setErrorBox(true);\r\n            props.AllListsNull()\r\n        }\r\n\r\n        if (props.ListInsertRes) {\r\n            let paylaod = {\r\n                FormName: 'Categoriess'\r\n            }\r\n            props.getAllLists(paylaod)\r\n            props.AllListsNull()\r\n            setVisibleDialog(false);\r\n            setLoading(true);\r\n        }\r\n        if (props.ListRes) {\r\n            setActionCol([\r\n\r\n            ]);\r\n            const activeColumn = {\r\n                title: \"InActive\",\r\n                field: \"InActive\",\r\n                render: rowData => {\r\n                    return <span className=\"table-checkbox\"><Checkbox disabled checked={rowData.InActive === 1 ? true : false} Categories=\"default\" /></span>\r\n                }\r\n            };\r\n            props.ListRes.columns.splice(2, 0, activeColumn);\r\n            setLoading(false);\r\n            setList(props.ListRes);\r\n            props.AllListsNull()\r\n        }\r\n        if (props.ListUpdateRes) {\r\n            let paylaod = {\r\n                FormName: 'Categoriess'\r\n            }\r\n            props.getAllLists(paylaod)\r\n            setVisibleDialog(false);\r\n            setLoading(true);\r\n\r\n            // setList(props.ListRes);\r\n            props.AllListsNull()\r\n        }\r\n        if (props.ListDelRes) {\r\n            setloadingDelete(false)\r\n            props.AllListsNull();\r\n            props.getAllLists({ FormName: 'Categoriess' });\r\n            setLoading(true);\r\n            setSelectedList(null);\r\n            setDeleteBox(false);\r\n            setMsgString('');\r\n        }\r\n\r\n        ;\r\n    })\r\n    let growl;\r\n\r\n    const addNew = () => {\r\n        updatePropert({\r\n            code: '',\r\n            ID: '',\r\n            InActive: '',\r\n            CategoriesName: ''\r\n        })\r\n        setloadingOnSave(false)\r\n        setVisibleDialog(true)\r\n        setEditData(true);\r\n    }\r\n  \r\n    const handleClose = () => {\r\n        setVisibleDialog(false)\r\n    }\r\n    const hideError = () => {\r\n        setErrorBox(false);\r\n        setMsgString('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid p-fluid\" >\r\n            <div className=\"p-col-12 p-lg-12\">\r\n                <ErrorBox open={errorBox} onClose={hideError} msg={msgString} />\r\n                <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={visibleDialog}>\r\n                    <MuiDialogTitle disableTypography>\r\n                        <Typography variant=\"h6\">Add Categories</Typography>\r\n                        <IconButton style={{ position: 'absolute', right: '5px', top: '10px' }} aria-label=\"close\" onClick={handleClose}>\r\n\r\n\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </MuiDialogTitle>\r\n                    <DialogContent dividers style={{ width: `${Math.ceil(window.outerWidth / 4)}px` }}  >\r\n                        <div style={{ marginBottom: '10px', marginTop: '5px' }} >\r\n                            {/* <TextField disabled value={property.Code} fullWidth style={{ display: 'block', marginBottom: '20px', width: '100%' }} id=\"standard-basic\" label=\"Code\" /> */}\r\n                            <TextField onChange={e => updatePropert({ ...property, CategoriesName: e.target.value })} value={property.CategoriesName} fullWidth style={{ display: 'block', marginBottom: '20px' }} id=\"standard-basic\" label=\"Category Name\" />\r\n\r\n                        </div>\r\n                        {loadingOnSave &&\r\n                            <div style={{ position: 'absolute', top: 100, left: 200 }}>\r\n                                <ProgressSpinner />\r\n                            </div>}\r\n                    </DialogContent>\r\n                    <MuiDialogActions>\r\n                        <Button disabled={loadingOnSave === true ? true : false} autoFocus onClick={handleSave} variant=\"outlined\"  >Save</Button>\r\n                        <Button disabled={loadingOnSave === true ? true : false} autoFocus onClick={handleClose} variant=\"outlined\">Cancel</Button>\r\n                    </MuiDialogActions>\r\n                </Dialog>\r\n                <MaterialTable\r\n                    style={{\r\n                        padding: '10px'\r\n                    }}\r\n                    title=\r\n                    {\r\n                        <div className=\"table-button\" >\r\n                            <span className=\"table-title\" style={{ fontWeight: \"bold\", fontSize: \"20px\" }}>Categories Details</span>\r\n                            <Button variant=\"contained\" onClick={() => addNew()} className=\"table-button\">Add<i className=\"fa fa-plus\" style={{ marginLeft: '10px' }} disabled={false}></i></Button>\r\n\r\n                        </div>\r\n                    }\r\n                    isLoading={loading}\r\n                    columns={List.columns}\r\n                    data={List.rows}\r\n                    localization={{\r\n                        body: {\r\n                            emptyDataSourceMessage: 'No records to display',\r\n                            filterRow: {\r\n                                filterTooltip: 'Filter'\r\n                            }\r\n                        }\r\n                    }}\r\n                    options={{\r\n                        actionsColumnIndex: -1,\r\n                        pageSize: 10,\r\n                        pageSizeOptions: [5, 10, 20, 30],\r\n                        search: true,\r\n                        headerStyle: {\r\n                            fontWeight: 'bold',\r\n                            paddingLeft: '10px',\r\n                            paddingRight: '0px',\r\n                            paddingTop: '5px',\r\n                            paddingBottom: '5px',\r\n                            textAlign: 'left'\r\n                        }\r\n                    }}\r\n                    actions={[\r\n                        // {\r\n                        //     icon: 'edit',\r\n                        //     tooltip: 'edit',\r\n                        //     onClick: (event, rowData) => {\r\n                        //         onEdit(rowData);\r\n                        //     },\r\n                        //     // disabled:this.btnEditRights === true ? false : true\r\n                        // },\r\n\r\n                        {\r\n                            icon: 'delete',\r\n                            tooltip: 'Delete',\r\n                            onClick: (event, rowData) => {\r\n                                onClickDelete(rowData)\r\n                            },\r\n                            // disabled: this.btnDeleteRights === true ? false : true\r\n                        },\r\n                    ]}\r\n                />\r\n                <DeleteBox open={deleteBox} onDelete={Delete} onCancel={hide} loadingDelete={loadingDelete} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        LoginRes: state.AuthReducer.LoginRes,\r\n        // users: state.AuthReducer.user,\r\n        // userActions: state.AuthReducer.userActions,\r\n        // ListRes: state.AllActionReducer.ListRes,\r\n        // ListDelRes: state.AllActionReducer.ListDelRes,\r\n        // ListInsertRes: state.AllActionReducer.ListInsertRes,\r\n        // ListUpdateRes: state.AllActionReducer.ListUpdateRes,\r\n        // error: state.AllActionReducer.error,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        insertCategories: (payload) => dispatch(AllAction.insertCategories(payload)),\r\n        // AllListsNull: () => dispatch(AllAction.AllListsNull()),\r\n        // updateAllLists: (payload) => dispatch(AllAction.updateAllLists(payload)),\r\n        // getAllLists: (payload) => dispatch(AllAction.getAllLists(payload)),\r\n        // deleteAllLists: (payload) => dispatch(AllAction.deleteAllLists(payload)),\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);"]},"metadata":{},"sourceType":"module"}