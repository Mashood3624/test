{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport { Subject } from 'rxjs/Subject';\nimport { map } from 'rxjs/operator/map';\nimport { switchMap } from 'rxjs/operator/switchMap';\nimport { ActionsObservable } from './ActionsObservable';\nimport { EPIC_END } from './EPIC_END';\nvar defaultAdapter = {\n  input: function input(action$) {\n    return action$;\n  },\n  output: function output(action$) {\n    return action$;\n  }\n};\nvar defaultOptions = {\n  adapter: defaultAdapter\n};\nexport function createEpicMiddleware(rootEpic) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n\n  if (typeof rootEpic !== 'function') {\n    throw new TypeError('You must provide a root Epic to createEpicMiddleware');\n  } // even though we used default param, we need to merge the defaults\n  // inside the options object as well in case they declare only some\n\n\n  options = _extends({}, defaultOptions, options);\n  var input$ = new Subject();\n  var action$ = options.adapter.input(new ActionsObservable(input$));\n  var epic$ = new Subject();\n  var store = void 0;\n\n  var epicMiddleware = function epicMiddleware(_store) {\n    store = _store;\n    return function (next) {\n      var _context;\n\n      (_context = map.call(epic$, function (epic) {\n        var vault = process.env.NODE_ENV === 'production' ? store : {\n          getState: store.getState,\n          dispatch: function dispatch(action) {\n            require('./utils/console').deprecate('calling store.dispatch() directly in your Epics is deprecated and will be removed. Instead, emit actions through the Observable your Epic returns.\\n\\n  https://goo.gl/WWNYSP');\n\n            return store.dispatch(action);\n          }\n        };\n        var output$ = 'dependencies' in options ? epic(action$, vault, options.dependencies) : epic(action$, vault);\n\n        if (!output$) {\n          throw new TypeError('Your root Epic \"' + (epic.name || '<anonymous>') + '\" does not return a stream. Double check you\\'re not missing a return statement!');\n        }\n\n        return output$;\n      }), switchMap).call(_context, function (output$) {\n        return options.adapter.output(output$);\n      }).subscribe(function (action) {\n        try {\n          store.dispatch(action);\n        } catch (err) {\n          console.error(err);\n        }\n      }); // Setup initial root epic\n\n      epic$.next(rootEpic);\n      return function (action) {\n        var result = next(action);\n        input$.next(action);\n        return result;\n      };\n    };\n  };\n\n  epicMiddleware.replaceEpic = function (rootEpic) {\n    // gives the previous root Epic a last chance\n    // to do some clean up\n    store.dispatch({\n      type: EPIC_END\n    }); // switches to the new root Epic, synchronously terminating\n    // the previous one\n\n    epic$.next(rootEpic);\n  };\n\n  return epicMiddleware;\n}","map":{"version":3,"sources":["D:/Github/Admin_Panel/node_modules/redux-observable/lib/esm/createEpicMiddleware.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","Subject","map","switchMap","ActionsObservable","EPIC_END","defaultAdapter","input","action$","output","defaultOptions","adapter","createEpicMiddleware","rootEpic","options","undefined","TypeError","input$","epic$","store","epicMiddleware","_store","next","_context","epic","vault","process","env","NODE_ENV","getState","dispatch","action","require","deprecate","output$","dependencies","name","subscribe","err","console","error","result","replaceEpic","type"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport { Subject } from 'rxjs/Subject';\nimport { map } from 'rxjs/operator/map';\nimport { switchMap } from 'rxjs/operator/switchMap';\nimport { ActionsObservable } from './ActionsObservable';\nimport { EPIC_END } from './EPIC_END';\n\nvar defaultAdapter = {\n  input: function input(action$) {\n    return action$;\n  },\n  output: function output(action$) {\n    return action$;\n  }\n};\n\nvar defaultOptions = {\n  adapter: defaultAdapter\n};\n\nexport function createEpicMiddleware(rootEpic) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n\n  if (typeof rootEpic !== 'function') {\n    throw new TypeError('You must provide a root Epic to createEpicMiddleware');\n  }\n\n  // even though we used default param, we need to merge the defaults\n  // inside the options object as well in case they declare only some\n  options = _extends({}, defaultOptions, options);\n  var input$ = new Subject();\n  var action$ = options.adapter.input(new ActionsObservable(input$));\n  var epic$ = new Subject();\n  var store = void 0;\n\n  var epicMiddleware = function epicMiddleware(_store) {\n    store = _store;\n\n    return function (next) {\n      var _context;\n\n      (_context = map.call(epic$, function (epic) {\n        var vault = process.env.NODE_ENV === 'production' ? store : {\n          getState: store.getState,\n          dispatch: function dispatch(action) {\n            require('./utils/console').deprecate('calling store.dispatch() directly in your Epics is deprecated and will be removed. Instead, emit actions through the Observable your Epic returns.\\n\\n  https://goo.gl/WWNYSP');\n            return store.dispatch(action);\n          }\n        };\n\n        var output$ = 'dependencies' in options ? epic(action$, vault, options.dependencies) : epic(action$, vault);\n\n        if (!output$) {\n          throw new TypeError('Your root Epic \"' + (epic.name || '<anonymous>') + '\" does not return a stream. Double check you\\'re not missing a return statement!');\n        }\n\n        return output$;\n      }), switchMap).call(_context, function (output$) {\n        return options.adapter.output(output$);\n      }).subscribe(function (action) {\n        try {\n          store.dispatch(action);\n        } catch (err) {\n          console.error(err);\n        }\n      });\n\n      // Setup initial root epic\n      epic$.next(rootEpic);\n\n      return function (action) {\n        var result = next(action);\n        input$.next(action);\n        return result;\n      };\n    };\n  };\n\n  epicMiddleware.replaceEpic = function (rootEpic) {\n    // gives the previous root Epic a last chance\n    // to do some clean up\n    store.dispatch({ type: EPIC_END });\n    // switches to the new root Epic, synchronously terminating\n    // the previous one\n    epic$.next(rootEpic);\n  };\n\n  return epicMiddleware;\n}"]},"metadata":{},"sourceType":"module"}