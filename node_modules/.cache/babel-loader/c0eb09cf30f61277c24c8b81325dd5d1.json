{"ast":null,"code":"import _classCallCheck from \"D:\\\\Github\\\\Admin_Panel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Github\\\\Admin_Panel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar AllAction = /*#__PURE__*/function () {\n  function AllAction() {\n    _classCallCheck(this, AllAction);\n  }\n\n  _createClass(AllAction, null, [{\n    key: \"AllListsNull\",\n    value: function AllListsNull() {\n      return {\n        type: AllAction.ALL_NULL\n      };\n    }\n  }, {\n    key: \"insertCompany\",\n    value: function insertCompany(payload) {\n      console.log(\"insertCompany\");\n      return {\n        type: AllAction.INSERT_COMPANY,\n        payload: payload\n      };\n    }\n  }, {\n    key: \"insertTermsConditions\",\n    value: function insertTermsConditions(payload) {\n      return {\n        type: AllAction.INSERT_TERM_AND_CONDITIONS,\n        payload: payload\n      };\n    }\n  }, {\n    key: \"insertDriver\",\n    value: function insertDriver(payload) {\n      return {\n        type: AllAction.INSERT_DRIVER,\n        payload: payload\n      };\n    }\n  }, {\n    key: \"insertCategories\",\n    value: function insertCategories(payload) {\n      return {\n        type: AllAction.INSERT_CATEGORIES,\n        payload: payload\n      };\n    }\n  }, {\n    key: \"insertProducts\",\n    value: function insertProducts(payload) {\n      return {\n        type: AllAction.INSERT_PRODUCTS,\n        payload: payload\n      };\n    }\n  }, {\n    key: \"insertAdminDriver\",\n    value: function insertAdminDriver(payload) {\n      return {\n        type: AllAction.INSERT_DRIVER_BY_ADMIN,\n        payload: payload\n      };\n    }\n  }, {\n    key: \"getCompany\",\n    value: function getCompany(payload) {\n      return {\n        type: AllAction.GET_COMPANY,\n        payload: payload\n      };\n    }\n  }, {\n    key: \"GetTermsAndCondition\",\n    value: function GetTermsAndCondition() {\n      return {\n        type: AllAction.GET_TERMS_AND_CONDITIOND\n      };\n    }\n  }, {\n    key: \"getProductsList\",\n    value: function getProductsList(payload) {\n      return {\n        type: AllAction.GET_PRODUCTS,\n        payload: payload\n      };\n    }\n  }, {\n    key: \"getDriversList\",\n    value: function getDriversList(payload) {\n      console.log(\"getDriversList\");\n      return {\n        type: AllAction.GET_DRIVERS,\n        payload: payload\n      };\n    }\n  }, {\n    key: \"getAllCompany\",\n    value: function getAllCompany() {\n      return {\n        type: AllAction.GET_ALL_COMPANY\n      };\n    }\n  }, {\n    key: \"getDriverRequsetsList\",\n    value: function getDriverRequsetsList(payload) {\n      return {\n        type: AllAction.GET_ALL_DRIVERS,\n        payload: payload\n      };\n    }\n  }, {\n    key: \"updateCompany\",\n    value: function updateCompany(payload) {\n      return {\n        type: AllAction.UPDATE_COMPANY,\n        payload: payload\n      };\n    }\n  }, {\n    key: \"updateDriver\",\n    value: function updateDriver(payload) {\n      return {\n        type: AllAction.UPDATE_DRIVER,\n        payload: payload\n      };\n    }\n  }]);\n\n  return AllAction;\n}();\n\nAllAction.INSERT_COMPANY = 'INSERT_COMPANY';\nAllAction.INSERT_COMPANY_SUCCESS = 'INSERT_COMPANY_SUCCESS';\nAllAction.INSERT_COMPANY_FAILURE = 'INSERT_COMPANY_FAILURE';\nAllAction.INSERT_DRIVER = 'INSERT_DRIVER';\nAllAction.INSERT_DRIVER_SUCCESS = 'INSERT_DRIVER_SUCCESS';\nAllAction.INSERT_DRIVER_FAILURE = 'INSERT_DRIVER_FAILURE';\nAllAction.INSERT_DRIVER_DATA_SUCCESS = 'INSERT_DRIVER_DATA_SUCCESS';\nAllAction.INSERT_DRIVER_DATA_FAILURE = 'INSERT_DRIVER_DATA_FAILURE';\nAllAction.INSERT_DRIVER_BY_ADMIN = 'INSERT_DRIVER_BY_ADMIN ';\nAllAction.INSERT_DRIVER_BY_ADMIN_SUCCESS = 'INSERT_DRIVER_BY_ADMIN_SUCCESS';\nAllAction.INSERT_DRIVER_BY_ADMIN_FAILURE = 'INSERT_DRIVER_BY_ADMIN_FAILURE';\nAllAction.INSERT_TERM_AND_CONDITIONS = 'INSERT_TERM_AND_CONDITIONS ';\nAllAction.INSERT_TERM_AND_CONDITIONS_SUCCESS = 'INSERT_TERM_AND_CONDITIONS_SUCCESS';\nAllAction.INSERT_TERM_AND_CONDITIONS_FAILURE = 'INSERT_TERM_AND_CONDITIONS_FAILURE';\nAllAction.INSERT_PRODUCTS = 'INSERT_PRODUCTS ';\nAllAction.INSERT_PRODUCTS_SUCCESS = 'INSERT_PRODUCTS_SUCCESS';\nAllAction.INSERT_PRODUCTS_FAILURE = 'INSERT_PRODUCTS_FAILURE';\nAllAction.INSERT_CATEGORIES = 'INSERT_CATEGORIES ';\nAllAction.INSERT_CATEGORIES_SUCCESS = 'INSERT_CATEGORIES_SUCCESS';\nAllAction.INSERT_CATEGORIES_FAILURE = 'INSERT_CATEGORIES_FAILURE';\nAllAction.GET_COMPANY = 'GET_COMPANY';\nAllAction.GET_COMPANY_SUCCESS = 'GET_COMPANY_SUCCESS';\nAllAction.GET_COMPANY_FAILURE = 'GET_COMPANY_FAILURE';\nAllAction.GET_COMPANY_SUCCESS_FAILURE = \"GET_COMPANY_SUCCESS_FAILURE\";\nAllAction.GET_TERMS_AND_CONDITIOND = 'GET_TERMS_AND_CONDITIOND';\nAllAction.GET_TERMS_AND_CONDITIOND_SUCCESS = 'GET_TERMS_AND_CONDITIOND_SUCCESS';\nAllAction.GET_TERMS_AND_CONDITIOND_FAILURE = 'GET_TERMS_AND_CONDITIOND_FAILURE';\nAllAction.GET_PRODUCTS = 'GET_PRODUCTS';\nAllAction.GET_PRODUCTS_SUCCESS = 'GET_PRODUCTS_SUCCESS';\nAllAction.GET_PRODUCTS_FAILURE = 'GET_PRODUCTS_FAILURE';\nAllAction.GET_PRODUCTS_SUCCESS_FAILURE = 'GET_PRODUCTS_SUCCESS_FAILURE';\nAllAction.GET_DRIVERS = 'GET_DRIVERS';\nAllAction.GET_DRIVERS_SUCCESS = 'GET_DRIVERS_SUCCESS';\nAllAction.GET_DRIVERS_FAILURE = 'GET_DRIVERS_FAILURE';\nAllAction.GET_ALL_DRIVERS_SUCCESS_FAILURE = \"GET_ALL_DRIVERS_SUCCESS_FAILURE\";\nAllAction.UPDATE_COMPANY = 'UPDATE_COMPANY';\nAllAction.UPDATE_COMPANY_SUCCESS = 'UPDATE_COMPANY_SUCCESS';\nAllAction.UPDATE_COMPANY_FAILURE = 'UPDATE_COMPANY_FAILURE';\nAllAction.UPDATE_DRIVER = 'UPDATE_DRIVER';\nAllAction.UPDATE_DRIVER_SUCCESS = 'UPDATE_DRIVER_SUCCESS';\nAllAction.UPDATE_DRIVER_FAILURE = 'UPDATE_DRIVER_FAILURE';\nAllAction.GET_ALL_COMPANY = 'GET_ALL_COMPANY';\nAllAction.GET_ALL_COMPANY_SUCCESS = 'GET_ALL_COMPANY_SUCCESS';\nAllAction.GET_ALL_COMPANY_FAILURE = 'GET_ALL_COMPANY_FAILURE';\nAllAction.GET_ALL_COMPANY_SUCCESS_FAILURE = \"GET_ALL_COMPANY_SUCCESS_FAILURE\";\nAllAction.GET_ALL_DRIVERS = 'GET_ALL_DRIVERS';\nAllAction.GET_ALL_DRIVERS_SUCCESS = 'GET_ALL_DRIVERS_SUCCESS';\nAllAction.GET_ALL_DRIVERS_FAILURE = 'GET_ALL_DRIVERS_FAILURE';\nAllAction.GET_ALL_DRIVERS_REQUEST_SUCCESS_FAILURE = \"GET_ALL_DRIVERS_REQUEST_SUCCESS_FAILURE\";\nAllAction.ALL_NULL = 'ALL_NULL';\nexport { AllAction as default };","map":{"version":3,"sources":["D:/Github/Admin_Panel/src/store/action/AllActions.js"],"names":["AllAction","type","ALL_NULL","payload","console","log","INSERT_COMPANY","INSERT_TERM_AND_CONDITIONS","INSERT_DRIVER","INSERT_CATEGORIES","INSERT_PRODUCTS","INSERT_DRIVER_BY_ADMIN","GET_COMPANY","GET_TERMS_AND_CONDITIOND","GET_PRODUCTS","GET_DRIVERS","GET_ALL_COMPANY","GET_ALL_DRIVERS","UPDATE_COMPANY","UPDATE_DRIVER","INSERT_COMPANY_SUCCESS","INSERT_COMPANY_FAILURE","INSERT_DRIVER_SUCCESS","INSERT_DRIVER_FAILURE","INSERT_DRIVER_DATA_SUCCESS","INSERT_DRIVER_DATA_FAILURE","INSERT_DRIVER_BY_ADMIN_SUCCESS","INSERT_DRIVER_BY_ADMIN_FAILURE","INSERT_TERM_AND_CONDITIONS_SUCCESS","INSERT_TERM_AND_CONDITIONS_FAILURE","INSERT_PRODUCTS_SUCCESS","INSERT_PRODUCTS_FAILURE","INSERT_CATEGORIES_SUCCESS","INSERT_CATEGORIES_FAILURE","GET_COMPANY_SUCCESS","GET_COMPANY_FAILURE","GET_COMPANY_SUCCESS_FAILURE","GET_TERMS_AND_CONDITIOND_SUCCESS","GET_TERMS_AND_CONDITIOND_FAILURE","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAILURE","GET_PRODUCTS_SUCCESS_FAILURE","GET_DRIVERS_SUCCESS","GET_DRIVERS_FAILURE","GET_ALL_DRIVERS_SUCCESS_FAILURE","UPDATE_COMPANY_SUCCESS","UPDATE_COMPANY_FAILURE","UPDATE_DRIVER_SUCCESS","UPDATE_DRIVER_FAILURE","GET_ALL_COMPANY_SUCCESS","GET_ALL_COMPANY_FAILURE","GET_ALL_COMPANY_SUCCESS_FAILURE","GET_ALL_DRIVERS_SUCCESS","GET_ALL_DRIVERS_FAILURE","GET_ALL_DRIVERS_REQUEST_SUCCESS_FAILURE"],"mappings":"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,GAAuB,sB;AAtDbvC,S,CAuDVwC,oB,GAAuB,sB;AAvDbxC,S,CAwDVyC,4B,GAA+B,8B;AAxDrBzC,S,CA2DVe,W,GAAc,a;AA3DJf,S,CA4DV0C,mB,GAAsB,qB;AA5DZ1C,S,CA6DV2C,mB,GAAsB,qB;AA7DZ3C,S,CA8DV4C,+B,GAAkC,iC;AA9DxB5C,S,CAkEVkB,c,GAAiB,gB;AAlEPlB,S,CAmEV6C,sB,GAAyB,wB;AAnEf7C,S,CAoEV8C,sB,GAAyB,wB;AApEf9C,S,CAsEVmB,a,GAAgB,e;AAtENnB,S,CAuEV+C,qB,GAAwB,uB;AAvEd/C,S,CAwEVgD,qB,GAAwB,uB;AAxEdhD,S,CA4EVgB,e,GAAkB,iB;AA5ERhB,S,CA6EViD,uB,GAA0B,yB;AA7EhBjD,S,CA8EVkD,uB,GAA0B,yB;AA9EhBlD,S,CA+EVmD,+B,GAAkC,iC;AA/ExBnD,S,CAiFViB,e,GAAkB,iB;AAjFRjB,S,CAkFVoD,uB,GAA0B,yB;AAlFhBpD,S,CAmFVqD,uB,GAA0B,yB;AAnFhBrD,S,CAoFVsD,uC,GAA0C,yC;AApFhCtD,S,CAwFVE,Q,GAAW,U;SAxFDF,S","sourcesContent":["export default class AllAction {\r\n\r\n\r\n    static INSERT_COMPANY = 'INSERT_COMPANY';\r\n    static INSERT_COMPANY_SUCCESS = 'INSERT_COMPANY_SUCCESS';\r\n    static INSERT_COMPANY_FAILURE = 'INSERT_COMPANY_FAILURE';\r\n\r\n    static INSERT_DRIVER = 'INSERT_DRIVER';\r\n    static INSERT_DRIVER_SUCCESS = 'INSERT_DRIVER_SUCCESS';\r\n    static INSERT_DRIVER_FAILURE = 'INSERT_DRIVER_FAILURE';\r\n    static INSERT_DRIVER_DATA_SUCCESS = 'INSERT_DRIVER_DATA_SUCCESS';\r\n    static INSERT_DRIVER_DATA_FAILURE = 'INSERT_DRIVER_DATA_FAILURE';\r\n\r\n\r\n    static INSERT_DRIVER_BY_ADMIN = 'INSERT_DRIVER_BY_ADMIN ';\r\n    static INSERT_DRIVER_BY_ADMIN_SUCCESS = 'INSERT_DRIVER_BY_ADMIN_SUCCESS';\r\n    static INSERT_DRIVER_BY_ADMIN_FAILURE = 'INSERT_DRIVER_BY_ADMIN_FAILURE';\r\n\r\n\r\n    static INSERT_TERM_AND_CONDITIONS = 'INSERT_TERM_AND_CONDITIONS ';\r\n    static INSERT_TERM_AND_CONDITIONS_SUCCESS = 'INSERT_TERM_AND_CONDITIONS_SUCCESS';\r\n    static INSERT_TERM_AND_CONDITIONS_FAILURE = 'INSERT_TERM_AND_CONDITIONS_FAILURE';\r\n    \r\n\r\n\r\n\r\n    static INSERT_PRODUCTS = 'INSERT_PRODUCTS ';\r\n    static INSERT_PRODUCTS_SUCCESS = 'INSERT_PRODUCTS_SUCCESS';\r\n    static INSERT_PRODUCTS_FAILURE = 'INSERT_PRODUCTS_FAILURE'\r\n\r\n\r\n\r\n    static INSERT_CATEGORIES = 'INSERT_CATEGORIES ';\r\n    static INSERT_CATEGORIES_SUCCESS = 'INSERT_CATEGORIES_SUCCESS';\r\n    static INSERT_CATEGORIES_FAILURE = 'INSERT_CATEGORIES_FAILURE'\r\n\r\n\r\n\r\n    \r\n    \r\n    static GET_COMPANY = 'GET_COMPANY';\r\n    static GET_COMPANY_SUCCESS = 'GET_COMPANY_SUCCESS';\r\n    static GET_COMPANY_FAILURE = 'GET_COMPANY_FAILURE';\r\n    static GET_COMPANY_SUCCESS_FAILURE = \"GET_COMPANY_SUCCESS_FAILURE\"\r\n\r\n\r\n    static GET_TERMS_AND_CONDITIOND = 'GET_TERMS_AND_CONDITIOND';\r\n    static GET_TERMS_AND_CONDITIOND_SUCCESS = 'GET_TERMS_AND_CONDITIOND_SUCCESS';\r\n    static GET_TERMS_AND_CONDITIOND_FAILURE = 'GET_TERMS_AND_CONDITIOND_FAILURE';\r\n    \r\n\r\n\r\n\r\n    static GET_PRODUCTS = 'GET_PRODUCTS';\r\n    static GET_PRODUCTS_SUCCESS = 'GET_PRODUCTS_SUCCESS';\r\n    static GET_PRODUCTS_FAILURE = 'GET_PRODUCTS_FAILURE';\r\n    static GET_PRODUCTS_SUCCESS_FAILURE = 'GET_PRODUCTS_SUCCESS_FAILURE';\r\n    \r\n\r\n    static GET_DRIVERS = 'GET_DRIVERS';\r\n    static GET_DRIVERS_SUCCESS = 'GET_DRIVERS_SUCCESS';\r\n    static GET_DRIVERS_FAILURE = 'GET_DRIVERS_FAILURE';\r\n    static GET_ALL_DRIVERS_SUCCESS_FAILURE = \"GET_ALL_DRIVERS_SUCCESS_FAILURE\"\r\n\r\n\r\n    \r\n    static UPDATE_COMPANY = 'UPDATE_COMPANY';\r\n    static UPDATE_COMPANY_SUCCESS = 'UPDATE_COMPANY_SUCCESS';\r\n    static UPDATE_COMPANY_FAILURE = 'UPDATE_COMPANY_FAILURE';\r\n\r\n    static UPDATE_DRIVER = 'UPDATE_DRIVER';\r\n    static UPDATE_DRIVER_SUCCESS = 'UPDATE_DRIVER_SUCCESS';\r\n    static UPDATE_DRIVER_FAILURE = 'UPDATE_DRIVER_FAILURE';\r\n\r\n    \r\n\r\n    static GET_ALL_COMPANY = 'GET_ALL_COMPANY';\r\n    static GET_ALL_COMPANY_SUCCESS = 'GET_ALL_COMPANY_SUCCESS';\r\n    static GET_ALL_COMPANY_FAILURE = 'GET_ALL_COMPANY_FAILURE';\r\n    static GET_ALL_COMPANY_SUCCESS_FAILURE = \"GET_ALL_COMPANY_SUCCESS_FAILURE\"\r\n\r\n    static GET_ALL_DRIVERS = 'GET_ALL_DRIVERS';\r\n    static GET_ALL_DRIVERS_SUCCESS = 'GET_ALL_DRIVERS_SUCCESS';\r\n    static GET_ALL_DRIVERS_FAILURE = 'GET_ALL_DRIVERS_FAILURE';\r\n    static GET_ALL_DRIVERS_REQUEST_SUCCESS_FAILURE = \"GET_ALL_DRIVERS_REQUEST_SUCCESS_FAILURE\"\r\n\r\n\r\n    \r\n    static ALL_NULL = 'ALL_NULL';\r\n\r\n\r\n    static AllListsNull() {\r\n        return {\r\n            type: AllAction.ALL_NULL,\r\n        };\r\n    }\r\n\r\n    static insertCompany(payload) {\r\n        console.log(\"insertCompany\")\r\n        return {\r\n            type: AllAction.INSERT_COMPANY,\r\n            payload\r\n        };\r\n    }\r\n    static insertTermsConditions(payload) {\r\n      \r\n        return {\r\n            type: AllAction.INSERT_TERM_AND_CONDITIONS,\r\n            payload\r\n        };\r\n    }\r\n\r\n    \r\n    static insertDriver(payload) {\r\n\r\n        return {\r\n            type: AllAction.INSERT_DRIVER,\r\n            payload\r\n        };\r\n    }\r\n    static insertCategories(payload) {\r\n\r\n        return {\r\n            type: AllAction.INSERT_CATEGORIES,\r\n            payload\r\n        };\r\n    }\r\n    \r\n    static insertProducts(payload) {\r\n\r\n        return {\r\n            type: AllAction.INSERT_PRODUCTS,\r\n            payload\r\n        };\r\n    }\r\n    static insertAdminDriver(payload) {\r\n\r\n        return {\r\n            type: AllAction.INSERT_DRIVER_BY_ADMIN,\r\n            payload\r\n        };\r\n    }\r\n    \r\n    \r\n\r\n    static getCompany(payload) {\r\n        return {\r\n            type: AllAction.GET_COMPANY,\r\n            payload\r\n        };\r\n    }\r\n    static GetTermsAndCondition() {\r\n        return {\r\n            type: AllAction.GET_TERMS_AND_CONDITIOND,\r\n            \r\n        };\r\n    }\r\n\r\n    static getProductsList(payload) {\r\n        return {\r\n            type: AllAction.GET_PRODUCTS,\r\n            payload\r\n        };\r\n    }\r\n    \r\n    static getDriversList(payload) {\r\n        console.log(\"getDriversList\")\r\n        return {\r\n            type: AllAction.GET_DRIVERS,\r\n            payload\r\n        };\r\n    }\r\n    \r\n    static getAllCompany() {\r\n        return {\r\n            type: AllAction.GET_ALL_COMPANY,\r\n\r\n        };\r\n    }\r\n\r\n\r\n    static getDriverRequsetsList(payload) {\r\n        return {\r\n            type: AllAction.GET_ALL_DRIVERS,\r\n            payload\r\n        };\r\n    }\r\n\r\n    \r\n \r\n    static updateCompany(payload) {\r\n        return {\r\n            type: AllAction.UPDATE_COMPANY,\r\n            payload\r\n        };\r\n    }\r\n\r\n    static updateDriver(payload) {\r\n        return {\r\n            type: AllAction.UPDATE_DRIVER,\r\n            payload\r\n        };\r\n    }\r\n    \r\n    \r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}