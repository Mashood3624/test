{"ast":null,"code":"import _classCallCheck from \"D:\\\\Github\\\\Admin_Panel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\n// eslint-disable-next-line\nimport { Observable } from 'rxjs';\nimport { AuthAction } from './../action/index';\nimport { axiosPost, axiosPut } from '../../service/index';\nimport appFirebase from '../../utilities/Firebase';\nimport constants from '../../utilities/constants';\nvar constant = constants.getConstant();\n\nvar AuthEpic = function AuthEpic() {\n  _classCallCheck(this, AuthEpic);\n};\n\nAuthEpic.login = function (action$) {\n  return action$.ofType(AuthAction.LOGIN).do(function (x) {\n    return x;\n  }).switchMap(function (_ref) {\n    var payload = _ref.payload;\n    return Observable.fromPromise(appFirebase.auth().signInWithEmailAndPassword(payload.Email, payload.Password)).map(function (response) {\n      console.log(\"response\", response.user.uid);\n      var Res = {\n        Res: response.user.uid\n      };\n      return {\n        type: AuthAction.LOGIN_SUCCESS,\n        payload: Res // };\n\n      };\n    }).catch(function (err) {\n      return Observable.of({\n        type: AuthAction.LOGIN_FAILURE,\n        payload: err\n      });\n    });\n  });\n};\n\nAuthEpic.Signup = function (action$) {\n  return action$.ofType(AuthAction.SIGNUP).do(function (x) {\n    return x;\n  }).switchMap(function (_ref2) {\n    var payload = _ref2.payload;\n    return Observable.fromPromise(appFirebase.auth().createUserWithEmailAndPassword(payload.Email, payload.Password)).map(function (response) {\n      if (response) {\n        return {\n          type: AuthAction.SIGNUP_SUCCESS,\n          payload: {\n            response: response,\n            payload: payload\n          }\n        };\n      } else {\n        return {\n          type: AuthAction.SIGNUP_FAILURE,\n          payload: 'Server Error'\n        };\n      }\n    }).catch(function (err) {\n      return Observable.of({\n        type: AuthAction.SIGNUP_FAILURE,\n        payload: err\n      });\n    });\n  });\n};\n\nAuthEpic.SetUserData = function (action$) {\n  return action$.ofType(AuthAction.SIGNUP_SUCCESS).do(function (x) {\n    return x;\n  }).switchMap(function (_ref3) {\n    var payload = _ref3.payload;\n    console.log(\"PayloadFrom\", payload);\n    console.log(\"uid\", payload.response.user.uid);\n    return Observable.fromPromise(appFirebase.firestore().collection(\"Users\").doc(payload.response.user.uid).set({\n      Name: payload.payload.Name,\n      DOB: payload.payload.DOB,\n      Gender: payload.payload.Gender,\n      Locating: payload.payload.Locating,\n      Occupation: payload.payload.Occupation,\n      Email: payload.payload.Email\n    })).map(function (response) {\n      return {\n        type: AuthAction.DATA_UPLOADED_SUCCESS,\n        payload: payload.response.user.uid\n      };\n    }).catch(function (err) {\n      return Observable.of({\n        type: AuthAction.DATA_UPLOADED_FAILURE,\n        payload: err\n      });\n    });\n  });\n};\n\nexport { AuthEpic as default };","map":{"version":3,"sources":["D:/Github/Admin_Panel/src/store/epic/auth.js"],"names":["Observable","AuthAction","axiosPost","axiosPut","appFirebase","constants","constant","getConstant","AuthEpic","login","action$","ofType","LOGIN","do","x","switchMap","payload","fromPromise","auth","signInWithEmailAndPassword","Email","Password","map","response","console","log","user","uid","Res","type","LOGIN_SUCCESS","catch","err","of","LOGIN_FAILURE","Signup","SIGNUP","createUserWithEmailAndPassword","SIGNUP_SUCCESS","SIGNUP_FAILURE","SetUserData","firestore","collection","doc","set","Name","DOB","Gender","Locating","Occupation","DATA_UPLOADED_SUCCESS","DATA_UPLOADED_FAILURE"],"mappings":"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","sourcesContent":["// eslint-disable-next-line\r\nimport { Observable } from 'rxjs';\r\nimport { AuthAction } from './../action/index';\r\nimport { axiosPost, axiosPut } from '../../service/index';\r\nimport appFirebase from '../../utilities/Firebase'\r\nimport constants from '../../utilities/constants';\r\nconst constant = constants.getConstant();\r\n\r\nexport default class AuthEpic {\r\n\r\n    static login = (action$) =>\r\n        action$.ofType(AuthAction.LOGIN)\r\n            .do(x => (x))\r\n            .switchMap(({ payload }) => {\r\n\r\n\r\n                return Observable.fromPromise(appFirebase.auth().signInWithEmailAndPassword(payload.Email, payload.Password))\r\n                    .map((response) => {\r\n                        console.log(\"response\",response.user.uid )\r\n                        let Res={\r\n                            Res:response.user.uid\r\n                        }\r\n                            return {\r\n                                type: AuthAction.LOGIN_SUCCESS,\r\n                                payload: Res\r\n                            // };\r\n                        }\r\n\r\n\r\n\r\n\r\n                    }).catch(err => Observable.of({\r\n                        type: AuthAction.LOGIN_FAILURE,\r\n                        payload: err\r\n                    }));\r\n            });\r\n\r\n    static Signup = (action$) =>\r\n        action$.ofType(AuthAction.SIGNUP)\r\n            .do(x => (x))\r\n            .switchMap(({ payload }) => {\r\n\r\n                return Observable.fromPromise(appFirebase.auth().createUserWithEmailAndPassword(payload.Email, payload.Password))\r\n                    .map((response) => {\r\n\r\n                        if (response) {\r\n                            return {\r\n                                type: AuthAction.SIGNUP_SUCCESS,\r\n                                payload: { response, payload }\r\n                            };\r\n                        } else {\r\n                            return {\r\n                                type: AuthAction.SIGNUP_FAILURE,\r\n                                payload: 'Server Error'\r\n                            };\r\n                        }\r\n                    }).catch(err => Observable.of({\r\n                        type: AuthAction.SIGNUP_FAILURE,\r\n                        payload: err\r\n                    }));\r\n            });\r\n\r\n    static SetUserData = (action$) =>\r\n        action$.ofType(AuthAction.SIGNUP_SUCCESS)\r\n            .do(x => (x))\r\n            .switchMap(({ payload }) => {\r\n                console.log(\"PayloadFrom\", payload)\r\n                console.log(\"uid\", payload.response.user.uid)\r\n                return Observable.fromPromise(appFirebase.firestore().collection(\"Users\").doc(payload.response.user.uid).set({\r\n                    Name: payload.payload.Name,\r\n                    DOB: payload.payload.DOB,\r\n                    Gender: payload.payload.Gender,\r\n                    Locating: payload.payload.Locating,\r\n                    Occupation: payload.payload.Occupation,\r\n                    Email: payload.payload.Email\r\n                }))\r\n                    .map((response) => {\r\n\r\n\r\n                        return {\r\n                            type: AuthAction.DATA_UPLOADED_SUCCESS,\r\n                            payload: payload.response.user.uid\r\n                        };\r\n\r\n\r\n                    }).catch(err => Observable.of({\r\n                        type: AuthAction.DATA_UPLOADED_FAILURE,\r\n                        payload: err\r\n                    }));\r\n            });\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}